name: Deploy to GitHub Pages

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write
  security-events: write

concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  setup:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
    outputs:
      cache-key: ${{ steps.cache-key.outputs.key }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate cache key
        id: cache-key
        run: echo "key=${{ hashFiles('package-lock.json') }}-${{ github.sha }}" >> $GITHUB_OUTPUT

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Create env file
        run: |
          # Secret variables
          echo "VITE_FIREBASE_API_KEY=${{ secrets.VITE_FIREBASE_API_KEY }}" >> .env
          echo "VITE_FIREBASE_AUTH_DOMAIN=${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}" >> .env
          echo "VITE_FIREBASE_DATABASE_URL=${{ secrets.VITE_FIREBASE_DATABASE_URL }}" >> .env
          echo "VITE_FIREBASE_PROJECT_ID=${{ secrets.VITE_FIREBASE_PROJECT_ID }}" >> .env
          echo "VITE_FIREBASE_STORAGE_BUCKET=${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}" >> .env
          echo "VITE_GOOGLE_API_KEY=${{ secrets.VITE_GOOGLE_API_KEY }}" >> .env
          echo "VITE_GOOGLE_SPREADSHEET_ID=${{ secrets.VITE_GOOGLE_SPREADSHEET_ID }}" >> .env

          # Public variables
          echo "VITE_GOOGLE_CLIENT_ID=${{ vars.VITE_GOOGLE_CLIENT_ID }}" >> .env
          echo "VITE_FIREBASE_MESSAGING_SENDER_ID=${{ vars.VITE_FIREBASE_MESSAGING_SENDER_ID }}" >> .env
          echo "VITE_FIREBASE_APP_ID=${{ vars.VITE_FIREBASE_APP_ID }}" >> .env
          echo "VITE_ROLES_CONFLICT_SHEET_ID=${{ vars.VITE_ROLES_CONFLICT_SHEET_ID }}" >> .env

      - name: Cache repository
        uses: actions/cache@v4
        with:
          path: |
            .
            !node_modules
          key: repo-${{ steps.cache-key.outputs.key }}

  security:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Restore cached repository
        uses: actions/cache@v4
        with:
          path: .
          key: repo-${{ needs.setup.outputs.cache-key }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  quality:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Restore cached repository
        uses: actions/cache@v4
        with:
          path: .
          key: repo-${{ needs.setup.outputs.cache-key }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install dependencies
        run: npm ci

      - name: Run TypeScript check
        run: npm run typecheck

      - name: Run lint check
        run: npm run lint:check

      - name: Run format check
        run: npm run format:check

      - name: Run build check
        run: npm run build:check

  test:
    needs: [setup]
    runs-on: ubuntu-latest
    steps:
      - name: Restore cached repository
        uses: actions/cache@v4
        with:
          path: .
          key: repo-${{ needs.setup.outputs.cache-key }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        run: npm run test -- --coverage

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage/
          retention-days: 30

      - name: Build Storybook
        run: npm run build-storybook

  build:
    needs: [setup, test, quality, security]
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    environment:
      name: github-pages
    steps:
      - name: Restore cached repository
        uses: actions/cache@v4
        with:
          path: .
          key: repo-${{ needs.setup.outputs.cache-key }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build
        env:
          NODE_ENV: production

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    needs: build
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Run smoke test
        run: |
          curl -sSf ${{ steps.deployment.outputs.page_url }} > /dev/null
